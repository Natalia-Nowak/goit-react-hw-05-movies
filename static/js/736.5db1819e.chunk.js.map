{"version":3,"file":"static/js/736.5db1819e.chunk.js","mappings":"uQAKe,SAASA,IAAgB,IAADC,EAAAC,EAG/BC,ECL0B,SAAAC,GAChC,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAuB9B,OArBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASG,OARbJ,EAAU,CACdK,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAGNf,GAAa,GAAMS,EAAAE,KAAA,EACIK,EAAAA,EAAAA,IAAU,sCAADC,OACQ3B,EAAO,mBAC7CiB,GACA,KAAD,EAHKC,EAAQC,EAAAS,KAKdtB,EAAQY,EAASb,MACjBK,GAAa,GAAO,wBAAAS,EAAAU,OAAA,GAAAb,EAAA,KACrB,kBAjBc,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAkBfnB,GACF,GAAG,CAACZ,IACG,CACLK,KAAAA,EACAI,UAAAA,EAEJ,CDxBcuB,EAFQC,EAAAA,EAAAA,MAAZjC,SAIR,OACEkC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OACEF,UAAU,aACVG,IAAI,eACJC,IAAK,kCAAoCxC,EAAIM,KAAKmC,eAEpDN,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,eAAcC,SAAErC,EAAIM,KAAKoC,SACvCP,EAAAA,EAAAA,MAAA,KAAGC,UAAU,mBAAkBC,SAAA,CAAC,eACjBrC,EAAIM,KAAKqC,iBAExBL,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAC,cACvCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mBAAkBC,SAAErC,EAAIM,KAAKsC,YAC1CN,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAC,YACvCC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mBAAkBC,SACzB,OAAHrC,QAAG,IAAHA,GAAS,QAANF,EAAHE,EAAKM,YAAI,IAAAR,GAAQ,QAARC,EAATD,EAAW+C,cAAM,IAAA9C,OAAd,EAAHA,EAAmB+C,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,GAAG,aAIvDb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oBAAmBC,SAAC,4BAClCF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,oBAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACb,UAAU,cAAcc,GAAG,OAAMb,SAAC,YAI1CC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACb,UAAU,cAAcc,GAAG,UAASb,SAAC,qBAMjDC,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAACC,UAAUd,EAAAA,EAAAA,KAAA,OAAAD,SAAK,oBAAsBA,UAC7CC,EAAAA,EAAAA,KAACe,EAAAA,GAAM,QAIf,C","sources":["components/MovieDetails/MovieDetails.jsx","components/Hooks/HandleMovieDetails.jsx"],"sourcesContent":["import { useParams, Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { HandleMovieDetails } from '../Hooks/HandleMovieDetails';\nimport './MovieDetails.css';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n\n  const res = HandleMovieDetails(movieId);\n\n  return (\n    <div className=\"detail-wrapper\">\n      <div className=\"detail-block\">\n        <img\n          className=\"detail-img\"\n          alt=\"movie_poster\"\n          src={'https://image.tmdb.org/t/p/w500' + res.data.poster_path}\n        ></img>\n        <div>\n          <h2 className=\"detail-title\">{res.data.title}</h2>\n          <p className=\"detail-paragraph\">\n            User Score: {res.data.vote_average}\n          </p>\n          <h3 className=\"detail-secondary-title\">Overview</h3>\n          <p className=\"detail-paragraph\">{res.data.overview}</p>\n          <h3 className=\"detail-secondary-title\">Genres</h3>\n          <p className=\"detail-paragraph\">\n            {res?.data?.genres?.map(genre => genre.name + ' ')}\n          </p>\n        </div>\n      </div>\n      <div className=\"detail-info-block\">\n        <h3 className=\"detail-info-title\">Additional Information</h3>\n        <ul className=\"details-link-list\">\n          <li>\n            <Link className=\"detail-link\" to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link className=\"detail-link\" to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const HandleMovieDetails = movieId => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTk4NTNiZmUxMDBkMjVmMGZiYTZjMTkwMTg3YzQ4ZiIsInN1YiI6IjY1NThkMzI3MjI5MzFhMDExYzk2Yzk2ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.FlUQQQ1eD5Nk8SJZYgRoUcjm4ddugKi_Hx1DLKb-DbA',\n        },\n      };\n      setIsLoading(true);\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n        options\n      );\n\n      setData(response.data);\n      setIsLoading(false);\n    };\n    getMovies();\n  }, [movieId]);\n  return {\n    data,\n    isLoading,\n  };\n};\n"],"names":["MovieDetails","_res$data","_res$data$genres","res","movieId","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","isLoading","setIsLoading","useEffect","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","options","response","_context","prev","next","method","headers","accept","Authorization","axios","concat","sent","stop","apply","arguments","HandleMovieDetails","useParams","_jsxs","className","children","_jsx","alt","src","poster_path","title","vote_average","overview","genres","map","genre","name","Link","to","Suspense","fallback","Outlet"],"sourceRoot":""}